{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/israil/WebstormProjects/Metbix/client/src/operationsUtils.js\";\nimport React from 'react';\nimport { Circle, Popup } from \"react-leaflet\";\nimport numeral from \"numeral\";\nimport './css/mapLeafte.css';\nconst casesTypeColors = {\n  cases: {\n    hex: \"#efb61f\",\n    multiplier: 200\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    multiplier: 300\n  },\n  deaths: {\n    hex: \"#e52828\",\n    multiplier: 400\n  }\n};\nexport const showDataOnMap = (data, casesType = \"recovered\") => data.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n  center: [country.countryInfo.lat, country.countryInfo.long],\n  color: casesTypeColors[casesType].hex,\n  fillColor: casesTypeColors[casesType].hex,\n  fillOpacity: 0.4,\n  radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n  children: /*#__PURE__*/_jsxDEV(Popup, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"infoPopContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoFlag\",\n        style: {\n          backgroundImage: `url(${country.countryInfo.flag})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoCountryName\",\n        children: country.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoCasesType\",\n        children: [\"Cases: \", numeral(country.cases).format('0,0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoCasesType\",\n        children: [\"Recovered: \", numeral(country.recovered).format('0,0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"infoCasesType\",\n        children: [\"Deaths: \", numeral(country.deaths).format('0,0')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 13\n}, this));\nexport const prettyPrintStat = stat => stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";","map":{"version":3,"sources":["/Users/israil/WebstormProjects/Metbix/client/src/operationsUtils.js"],"names":["React","Circle","Popup","numeral","casesTypeColors","cases","hex","multiplier","recovered","deaths","showDataOnMap","data","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag","format","prettyPrintStat","stat"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAiBC,KAAjB,QAA6B,eAA7B;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,OAAO,qBAAP;AAGA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,GAAG,EAAE,SADF;AAEHC,IAAAA,UAAU,EAAE;AAFT,GADa;AAKpBC,EAAAA,SAAS,EAAE;AACPF,IAAAA,GAAG,EAAE,SADE;AAEPC,IAAAA,UAAU,EAAE;AAFL,GALS;AASpBE,EAAAA,MAAM,EAAE;AACJH,IAAAA,GAAG,EAAE,SADD;AAEJC,IAAAA,UAAU,EAAE;AAFR;AATY,CAAxB;AAkBI,OAAO,MAAMG,aAAa,GAAG,CAACC,IAAD,EAAOC,SAAS,GAAG,WAAnB,KACzBD,IAAI,CAACE,GAAL,CAAUC,OAAD,iBACL,QAAC,MAAD;AACI,EAAA,MAAM,EAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADZ;AAEI,EAAA,KAAK,EAAEb,eAAe,CAACQ,SAAD,CAAf,CAA2BN,GAFtC;AAGI,EAAA,SAAS,EAAEF,eAAe,CAACQ,SAAD,CAAf,CAA2BN,GAH1C;AAII,EAAA,WAAW,EAAE,GAJjB;AAKI,EAAA,MAAM,EACFY,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,IAAgCR,eAAe,CAACQ,SAAD,CAAf,CAA2BL,UANnE;AAAA,yBAUJ,QAAC,KAAD;AAAA,2BAEI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAA0B,QAAA,KAAK,EAAE;AAACa,UAAAA,eAAe,EAAI,OAAMN,OAAO,CAACC,WAAR,CAAoBM,IAAK;AAAnD;AAAjC;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,kBAEKP,OAAO,CAACA;AAFb;AAAA;AAAA;AAAA;AAAA,cAJJ,eASI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,8BAEYX,OAAO,CAACW,OAAO,CAACT,KAAT,CAAP,CAAuBiB,MAAvB,CAA8B,KAA9B,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAcI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,kCAEgBnB,OAAO,CAACW,OAAO,CAACN,SAAT,CAAP,CAA2Bc,MAA3B,CAAkC,KAAlC,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,cAdJ,eAoBI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA,+BAEanB,OAAO,CAACW,OAAO,CAACL,MAAT,CAAP,CAAwBa,MAAxB,CAA+B,KAA/B,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AAVI;AAAA;AAAA;AAAA;AAAA,QADJ,CADG;AAkDX,OAAO,MAAMC,eAAe,GAAIC,IAAD,IAC3BA,IAAI,GAAI,IAAGrB,OAAO,CAACqB,IAAD,CAAP,CAAcF,MAAd,CAAqB,MAArB,CAA6B,EAApC,GAAwC,IADzC","sourcesContent":["import React from 'react';\nimport {Circle , Popup} from \"react-leaflet\";\nimport numeral from \"numeral\";\nimport './css/mapLeafte.css'\n\n\nconst casesTypeColors = {\n    cases: {\n        hex: \"#efb61f\",\n        multiplier: 200,\n    },\n    recovered: {\n        hex: \"#7dd71d\",\n        multiplier: 300,\n    },\n    deaths: {\n        hex: \"#e52828\",\n        multiplier: 400,\n    },\n};\n\n\n\n\n    export const showDataOnMap = (data, casesType = \"recovered\") =>\n        data.map((country) => (\n            <Circle\n                center={[country.countryInfo.lat, country.countryInfo.long]}\n                color={casesTypeColors[casesType].hex}\n                fillColor={casesTypeColors[casesType].hex}\n                fillOpacity={0.4}\n                radius={\n                    Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n                }\n            >\n\n        <Popup>\n\n            <div className='infoPopContainer'>\n                <div className='infoFlag' style={{backgroundImage : `url(${country.countryInfo.flag})`}}>\n\n                </div>\n                <div className='infoCountryName'>\n\n                    {country.country}\n\n                </div>\n                <div className='infoCasesType'>\n\n                    Cases: {numeral(country.cases).format('0,0')}\n\n                </div>\n                <div className='infoCasesType'>\n\n                    Recovered: {numeral(country.recovered).format('0,0')}\n\n\n                </div>\n                <div className='infoCasesType'>\n\n                    Deaths: {numeral(country.deaths).format('0,0')}\n\n\n                </div>\n            </div>\n\n\n        </Popup>\n\n            </Circle>\n        ));\n\n\n\nexport const prettyPrintStat = (stat) =>\n    stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";"]},"metadata":{},"sourceType":"module"}