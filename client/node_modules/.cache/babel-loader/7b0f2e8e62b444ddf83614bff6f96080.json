{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/israil/WebstormProjects/Metbix/client/src/header.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport './css/header.css';\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\nimport InfoStats from \"./infoStats\";\nimport './css/infoStats.css';\nimport LineGraph from './LineGraph';\nimport './css/lineGraph.css';\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport { prettyPrintStat } from \"./operationsUtils\";\n\nfunction Header() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"WorldWide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [mapCenter, setMapCenter] = useState({\n    lat: 41.42067843862231,\n    lng: 46.93269214775548\n  });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountry, setMapCountry] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  useEffect(() => {\n    fetch('https://disease.sh/v3/covid-19/all').then(response => response.json()).then(data => {\n      setCountryInfo(data);\n    });\n  }, []);\n  useEffect(() => {\n    const getCountries = async () => {\n      await fetch('https://disease.sh/v3/covid-19/countries').then(response => response.json()).then(data => {\n        const countries = data.map(country => ({\n          name: country.country,\n          value: country.countryInfo.iso2\n        }));\n        setCountries(countries);\n        setMapCountry(data);\n      });\n    };\n\n    getCountries();\n  }, []);\n\n  const onCountryChange = async event => {\n    const countryCode = event.target.value;\n    const url = countryCode === 'WorldWide' ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url).then(response => response.json()).then(data => {\n      setCountry(countryCode);\n      setCountryInfo(data);\n      setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n      setMapZoom(4);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map_header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"header_text\",\n        children: \"CoronaVirus Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: \"map_dropdown\",\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: country,\n          onChange: onCountryChange,\n          variant: \"outlined\",\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"WorldWide\",\n            children: \"WorldWide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: country.value,\n            children: country.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 34\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map_stats\",\n      children: [/*#__PURE__*/_jsxDEV(InfoStats, {\n        active: casesType === \"cases\",\n        onClick: e => setCasesType(\"cases\"),\n        title: \"Cases\",\n        total: prettyPrintStat(countryInfo.cases),\n        count: prettyPrintStat(countryInfo.todayCases)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InfoStats, {\n        active: casesType === \"recovered\",\n        onClick: e => setCasesType(\"recovered\"),\n        title: \"Recovered\",\n        total: prettyPrintStat(countryInfo.recovered),\n        count: prettyPrintStat(countryInfo.todayRecovered)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(InfoStats, {\n        active: casesType === \"deaths\",\n        onClick: e => setCasesType(\"deaths\"),\n        title: \"Deaths\",\n        total: prettyPrintStat(countryInfo.deaths),\n        count: prettyPrintStat(countryInfo.todayDeaths)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats_graph\",\n      children: /*#__PURE__*/_jsxDEV(LineGraph, {\n        casesType: casesType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map\",\n      children: /*#__PURE__*/_jsxDEV(Map, {\n        casesType: casesType,\n        countries: mapCountry,\n        center: mapCenter,\n        zoom: mapZoom\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 13\n  }, this);\n}\n\n_s(Header, \"/R+b/kKIJnTJ7z2p8jSue5uvabg=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/israil/WebstormProjects/Metbix/client/src/header.js"],"names":["React","Component","useState","useEffect","PropTypes","FormControl","MenuItem","Select","InfoStats","LineGraph","Map","prettyPrintStat","Header","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","mapCenter","setMapCenter","lat","lng","mapZoom","setMapZoom","mapCountry","setMapCountry","casesType","setCasesType","fetch","then","response","json","data","getCountries","map","name","value","iso2","onCountryChange","event","countryCode","target","url","long","e","cases","todayCases","recovered","todayRecovered","deaths","todayDeaths"],"mappings":"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","sourcesContent":["import React, {Component , useState,useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport './css/header.css';\nimport {FormControl,MenuItem,Select} from \"@material-ui/core\"\nimport InfoStats from \"./infoStats\";\nimport './css/infoStats.css'\nimport LineGraph from './LineGraph';\nimport './css/lineGraph.css';\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport {prettyPrintStat} from \"./operationsUtils\";\n\n\n\nfunction Header(){\n\n    const[countries,setCountries] = useState([]);\n    const[country,setCountry] = useState(\"WorldWide\");\n    const[countryInfo,setCountryInfo] = useState({});\n    const[mapCenter, setMapCenter] = useState({lat: 41.42067843862231, lng: 46.93269214775548} );\n    const [mapZoom, setMapZoom] = useState(3);\n    const[mapCountry , setMapCountry] = useState([]);\n    const[casesType , setCasesType] = useState(\"cases\");\n\n\n\n\n\n\n\n    useEffect(() => {\n\n        fetch('https://disease.sh/v3/covid-19/all')\n            .then((response) => response.json())\n            .then((data) => {\n\n                setCountryInfo(data);\n\n            });\n\n    },[]);\n\n\n    useEffect(() => {\n\n\n        const getCountries = async () => {\n\n            await fetch('https://disease.sh/v3/covid-19/countries')\n                .then((response) => response.json())\n                .then((data) => {\n\n                    const countries = data.map((country) => ({\n\n                        name : country.country,\n                        value : country.countryInfo.iso2,\n\n                    }));\n\n                    setCountries(countries);\n                    setMapCountry(data);\n                })\n\n\n        }\n\n\n        getCountries();\n\n    },[])\n\n\n\n\n\n\n\n    const onCountryChange = async (event) =>{\n\n        const countryCode = event.target.value;\n\n        const url =\n            countryCode === 'WorldWide'\n                ? \"https://disease.sh/v3/covid-19/all\"\n                : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n        await fetch(url)\n            .then((response) => response.json())\n            .then((data) => {\n\n                setCountry(countryCode);\n                setCountryInfo(data);\n\n\n                setMapCenter([data.countryInfo.lat , data.countryInfo.long]);\n                setMapZoom(4);\n\n            });\n\n\n\n    };\n\n\n\n    return (\n            <div>\n\n                <div className=\"map_header\">\n\n\n\n                    <h1 className='header_text'>CoronaVirus Map</h1>\n\n                    <FormControl className='map_dropdown'>\n\n                        <Select value={country} onChange={onCountryChange} variant='outlined'>\n\n                            <MenuItem  value=\"WorldWide\">WorldWide</MenuItem>\n\n\n                            {\n                                countries.map((country) => (\n\n                                 <MenuItem value={country.value}>{country.name}</MenuItem>\n\n                                ))\n\n                            }\n\n\n\n\n                        </Select>\n\n\n                    </FormControl>\n\n\n                </div>\n\n\n\n                <div className=\"map_stats\">\n\n\n                    <InfoStats\n                        active = {casesType === \"cases\"} onClick = {(e) => setCasesType(\"cases\")} title = \"Cases\" total = {prettyPrintStat(countryInfo.cases)} count = {prettyPrintStat(countryInfo.todayCases)}/>\n\n                    <InfoStats\n                        active = {casesType === \"recovered\"}   onClick = {(e) => setCasesType(\"recovered\")} title = \"Recovered\" total = {prettyPrintStat(countryInfo.recovered)} count = {prettyPrintStat(countryInfo.todayRecovered)}/>\n                    <InfoStats\n                        active = {casesType === \"deaths\"}  onClick = {(e) => setCasesType(\"deaths\")} title = \"Deaths\" total = {prettyPrintStat(countryInfo.deaths)} count = {prettyPrintStat(countryInfo.todayDeaths)}/>\n                </div>\n\n\n\n                <div className=\"stats_graph\">\n\n                    <LineGraph casesType={casesType}/>\n\n                </div>\n\n\n                <div className=\"map\">\n\n\n                    <Map casesType = {casesType} countries = {mapCountry} center={mapCenter} zoom={mapZoom}/>\n\n                </div>\n\n            </div>\n\n\n\n        );\n\n\n\n\n\n\n}\n\n\n\nexport default Header;\n\n\n\n"]},"metadata":{},"sourceType":"module"}