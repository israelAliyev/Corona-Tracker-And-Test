{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/israil/WebstormProjects/Metbix/client/src/Test/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport '../css/test.css';\nimport Start from './Start.js';\nimport testData from \"../Data/data.json\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport YourAnswers from \"./YourAnswers\";\n\nconst Test = () => {\n  _s();\n\n  const [step, setStep] = useState(1);\n  const [answer, setAnswer] = useState(\"\");\n  const [numberOfQuestion, setnumberOfQuestion] = useState(0);\n  const [boolY, setBoolY] = useState(false);\n  const [boolN, setBoolN] = useState(false);\n  const [boolS, setBoolS] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const answerDAta = [{\n    answer: \"\"\n  }, {\n    answer: \"\"\n  }, {\n    answer: \"\"\n  }, {\n    answer: \"\"\n  }, {\n    answer: \"\"\n  }, {\n    answer: \"\"\n  }, {\n    answer: \"\"\n  }, {\n    answer: \"\"\n  }];\n\n  const mainFunction = () => {\n    setBoolY(false);\n    setBoolN(false);\n    setBoolS(false);\n\n    if (boolS === false && boolN === false && boolY === false) {\n      setError(\"Any form can't be empty!\");\n    } else {\n      answerDAta[numberOfQuestion].answer = answer;\n      testData.data[numberOfQuestion].answer = answer;\n      {\n        answerDAta[7].answer && setnumberOfQuestion(0);\n      }\n\n      if (numberOfQuestion < testData.data.length - 1) {\n        setnumberOfQuestion(numberOfQuestion + 1);\n      } else {\n        setStep(3);\n        console.log(answerDAta[1].answer);\n      }\n    }\n  };\n\n  const checkedFunc = e => {\n    setError(\"\");\n\n    if (e === \"yes\") {\n      setBoolY(true);\n      setBoolN(false);\n      setBoolS(false);\n    }\n\n    if (e === \"no\") {\n      setBoolY(false);\n      setBoolN(true);\n      setBoolS(false);\n    }\n\n    if (e === \"sometimes\") {\n      setBoolY(false);\n      setBoolN(false);\n      setBoolS(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test_header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"test_header_text\",\n        children: \"CoronaVirus Test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test_questions\",\n      children: [step === 1 && /*#__PURE__*/_jsxDEV(Start, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 10\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question_div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"question_text\",\n          children: testData.data[numberOfQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 14\n        }, this), error !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-danger error_div\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              color: \"#721c24\"\n            },\n            children: \"Error!:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 18\n          }, this), \" \", error]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 14\n        }, this), error === \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: numberOfQuestion === 2 ? \"alert alert-primary description_div2\" : \"alert alert-primary description_div\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            style: {\n              color: \"#92272f\"\n            },\n            children: testData.data[numberOfQuestion].description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test_informations\",\n      children: [step === 3 && /*#__PURE__*/_jsxDEV(YourAnswers, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), step === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"780px\",\n          src: \"./images/step1.jpg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"whenTest\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"YOUR ANSWERED\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [numberOfQuestion, \"/8\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"QUESTIONS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"test_inputs\",\n      children: [step === 1 && /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"start_button\",\n        onClick: e => setStep(2),\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), step === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox_div\",\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          name: \"check\",\n          color: \"primary\",\n          value: \"yes\",\n          onChange: e => setAnswer(e.target.value),\n          onClick: e => checkedFunc(e.target.value),\n          checked: boolY\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"yes\",\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          name: \"check\",\n          color: \"primary\",\n          value: \"no\",\n          onChange: e => setAnswer(e.target.value),\n          onClick: e => checkedFunc(e.target.value),\n          checked: boolN\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"no\",\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          name: \"check\",\n          color: \"primary\",\n          value: \"sometimes\",\n          onChange: e => setAnswer(e.target.value),\n          onClick: e => checkedFunc(e.target.value),\n          checked: boolS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sometimes\",\n          children: \"Sometimes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          onClick: mainFunction,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), step === 3 && /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"start_button\",\n        onClick: e => setStep(2),\n        children: \"Try It\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Test, \"TRsNgfzGvn1FtQtVzHcu8CHeBqE=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/israil/WebstormProjects/Metbix/client/src/Test/Test.js"],"names":["React","useEffect","useState","useRef","Start","testData","Checkbox","YourAnswers","Test","step","setStep","answer","setAnswer","numberOfQuestion","setnumberOfQuestion","boolY","setBoolY","boolN","setBoolN","boolS","setBoolS","error","setError","status","setStatus","answerDAta","mainFunction","data","length","console","log","checkedFunc","e","question","color","description","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect,useState,useRef} from 'react';\nimport '../css/test.css'\nimport Start from './Start.js'\nimport testData from \"../Data/data.json\"\nimport Checkbox  from \"@material-ui/core/Checkbox\"\nimport YourAnswers from \"./YourAnswers\";\n\nconst Test = () => {\n\n    const[step , setStep] = useState(1);\n    const[answer , setAnswer] = useState(\"\");\n    const[numberOfQuestion , setnumberOfQuestion] = useState(0);\n    const[boolY , setBoolY] = useState(false);\n    const[boolN , setBoolN] = useState(false);\n    const[boolS , setBoolS] = useState(false);\n    const[error , setError] = useState(\"\");\n    const[status , setStatus] = useState(\"\");\n\n\n\n\n    const answerDAta = [\n\n        {\n           answer:\"\"\n\n        },\n        {\n            answer:\"\"\n\n        },\n        {\n            answer:\"\"\n\n        },\n        {\n            answer:\"\"\n\n        },\n        {\n            answer:\"\"\n\n        },\n        {\n            answer:\"\"\n\n        },\n        {\n            answer:\"\"\n\n        },\n        {\n            answer:\"\"\n\n        }\n    ]\n\n\n\n    const  mainFunction = () => {\n\n\n        setBoolY(false)\n        setBoolN(false)\n        setBoolS(false)\n\n        if(boolS === false && boolN === false && boolY === false){\n\n            setError(\"Any form can't be empty!\")\n\n        }else{\n\n         answerDAta[numberOfQuestion].answer = answer\n\n      testData.data[numberOfQuestion].answer = answer\n\n            {answerDAta[7].answer && setnumberOfQuestion(0)}\n\n         if(numberOfQuestion < testData.data.length-1) {\n\n            setnumberOfQuestion(numberOfQuestion + 1)\n\n\n          }else{\n\n            setStep(3);\n\n\n\n            console.log(answerDAta[1].answer)\n\n\n\n\n         }\n\n        }\n\n\n    }\n\n\n\nconst checkedFunc = (e) =>{\n    setError(\"\")\n\n    if(e === \"yes\")\n{\n    setBoolY(true)\n    setBoolN(false)\n    setBoolS(false)\n\n}\n\n    if(e === \"no\")\n    {\n        setBoolY(false)\n        setBoolN(true)\n        setBoolS(false)\n    }\n\n    if(e === \"sometimes\")\n    {\n        setBoolY(false)\n        setBoolN(false)\n        setBoolS(true)\n    }\n}\n\n\n    return(\n\n        <div>\n\n\n        <div className=\"test_header\">\n\n            <h2 className='test_header_text'>CoronaVirus Test</h2>\n\n        </div>\n\n     <div className=\"test_questions\">\n\n\n         {step === 1 &&\n         <Start/>\n         }\n\n\n         {step === 2 &&\n         <div className='question_div'>\n\n             <h2 className='question_text'>{testData.data[numberOfQuestion].question}</h2>\n\n\n             {error !== \"\" &&\n\n             <div  className=\"alert alert-danger error_div\">\n                 <strong style={{color:\"#721c24\"}}>Error!:</strong> {error}\n             </div>\n\n         }\n\n             {error === \"\" &&\n\n             <div  className= {numberOfQuestion === 2 ? \"alert alert-primary description_div2\" : \"alert alert-primary description_div\"}>\n                 <strong style={{color:\"#92272f\"}}>{testData.data[numberOfQuestion].description}</strong>\n             </div>\n\n             }\n\n\n\n         </div>\n\n         }\n\n\n\n\n\n\n\n\n     </div>\n\n            <div className=\"test_informations\">\n\n\n                {step === 3 &&\n                <YourAnswers/>\n                }\n\n\n                {step === 1 &&\n\n                    <div>\n\n                        <img width='780px' src=\"./images/step1.jpg\"/>\n\n                    </div>\n                }\n\n                {step === 2 &&\n\n                <div className='whenTest'>\n\n                    <br/>\n\n                    <h3>YOUR ANSWERED</h3>\n\n                    <h1>{numberOfQuestion}/8</h1>\n\n\n\n\n                    <br/>\n                    <h3>QUESTIONS</h3>\n\n                </div>\n                }\n\n\n            </div>\n\n\n\n            <div className=\"test_inputs\">\n\n                {step === 1 &&\n                <a className='start_button' onClick={ (e) => setStep(2) }>Start</a>\n                }\n\n\n                {step === 2 &&\n\n                <div  className='checkbox_div'>\n\n                    <Checkbox name = \"check\" color='primary' value='yes' onChange={(e)=>setAnswer(e.target.value)} onClick={(e) => checkedFunc(e.target.value) } checked={boolY}/>\n                    <label htmlFor=\"yes\">Yes</label>\n                    <Checkbox name = \"check\" color='primary' value='no' onChange={(e)=>setAnswer(e.target.value)} onClick={(e) => checkedFunc(e.target.value) } checked={boolN}/>\n                    <label htmlFor=\"no\">No</label>\n                    <Checkbox name = \"check\" color='primary' value='sometimes'  onChange={(e)=>setAnswer(e.target.value)}  onClick={(e) => checkedFunc(e.target.value) } checked={boolS}/>\n                    <label htmlFor=\"sometimes\">Sometimes</label>\n                    <button className='btn btn-primary' type='button' onClick={mainFunction}>Next</button>\n\n\n\n\n\n                </div>\n                }\n\n                {step === 3 &&\n\n                    <a className='start_button'  onClick={ (e) => setStep(2)}>Try It</a>\n                }\n\n\n\n                    </div>\n\n\n        </div>\n\n    );\n\n}\n\nexport default Test;\n\n"]},"metadata":{},"sourceType":"module"}