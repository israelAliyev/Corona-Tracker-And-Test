{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from'react';import{Circle,Popup}from\"react-leaflet\";import numeral from\"numeral\";import'../css/mapLeafte.css';var casesTypeColors={cases:{hex:\"#efb61f\",multiplier:200},recovered:{hex:\"#7dd71d\",multiplier:300},deaths:{hex:\"#e52828\",multiplier:400}};export var showDataOnMap=function showDataOnMap(data){var casesType=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"cases\";return data.map(function(country){return/*#__PURE__*/_jsx(Circle,{center:[country.countryInfo.lat,country.countryInfo.long],color:casesTypeColors[casesType].hex,fillColor:casesTypeColors[casesType].hex,fillOpacity:0.4,radius:Math.sqrt(country[casesType])*casesTypeColors[casesType].multiplier,children:/*#__PURE__*/_jsx(Popup,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"infoPopContainer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"infoFlag\",style:{backgroundImage:\"url(\".concat(country.countryInfo.flag,\")\")}}),/*#__PURE__*/_jsx(\"div\",{className:\"infoCountryName\",children:country.country}),/*#__PURE__*/_jsxs(\"div\",{className:\"infoCasesType\",children:[\"Cases: \",numeral(country.cases).format('0,0')]}),/*#__PURE__*/_jsxs(\"div\",{className:\"infoCasesType\",children:[\"Recovered: \",numeral(country.recovered).format('0,0')]}),/*#__PURE__*/_jsxs(\"div\",{className:\"infoCasesType\",children:[\"Deaths: \",numeral(country.deaths).format('0,0')]})]})})});});};export var prettyPrintStat=function prettyPrintStat(stat){return stat?\"+\".concat(numeral(stat).format(\"0.0a\")):\"+0\";};","map":{"version":3,"sources":["/Users/israil/WebstormProjects/Metbix/client/src/Map/operationsUtils.js"],"names":["React","Circle","Popup","numeral","casesTypeColors","cases","hex","multiplier","recovered","deaths","showDataOnMap","data","casesType","map","country","countryInfo","lat","long","Math","sqrt","backgroundImage","flag","format","prettyPrintStat","stat"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,MAAR,CAAiBC,KAAjB,KAA6B,eAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,SAApB,CACA,MAAO,sBAAP,CAGA,GAAMC,CAAAA,eAAe,CAAG,CACpBC,KAAK,CAAE,CACHC,GAAG,CAAE,SADF,CAEHC,UAAU,CAAE,GAFT,CADa,CAKpBC,SAAS,CAAE,CACPF,GAAG,CAAE,SADE,CAEPC,UAAU,CAAE,GAFL,CALS,CASpBE,MAAM,CAAE,CACJH,GAAG,CAAE,SADD,CAEJC,UAAU,CAAE,GAFR,CATY,CAAxB,CAkBI,MAAO,IAAMG,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,IAAD,KAAOC,CAAAA,SAAP,2DAAmB,OAAnB,OACzBD,CAAAA,IAAI,CAACE,GAAL,CAAS,SAACC,OAAD,qBACL,KAAC,MAAD,EACI,MAAM,CAAE,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,CAA0BF,OAAO,CAACC,WAAR,CAAoBE,IAA9C,CADZ,CAEI,KAAK,CAAEb,eAAe,CAACQ,SAAD,CAAf,CAA2BN,GAFtC,CAGI,SAAS,CAAEF,eAAe,CAACQ,SAAD,CAAf,CAA2BN,GAH1C,CAII,WAAW,CAAE,GAJjB,CAKI,MAAM,CACFY,IAAI,CAACC,IAAL,CAAUL,OAAO,CAACF,SAAD,CAAjB,EAAgCR,eAAe,CAACQ,SAAD,CAAf,CAA2BL,UANnE,uBAUJ,KAAC,KAAD,wBAEI,aAAK,SAAS,CAAC,kBAAf,wBACI,YAAK,SAAS,CAAC,UAAf,CAA0B,KAAK,CAAE,CAACa,eAAe,eAAUN,OAAO,CAACC,WAAR,CAAoBM,IAA9B,KAAhB,CAAjC,EADJ,cAII,YAAK,SAAS,CAAC,iBAAf,UAEKP,OAAO,CAACA,OAFb,EAJJ,cASI,aAAK,SAAS,CAAC,eAAf,qBAEYX,OAAO,CAACW,OAAO,CAACT,KAAT,CAAP,CAAuBiB,MAAvB,CAA8B,KAA9B,CAFZ,GATJ,cAcI,aAAK,SAAS,CAAC,eAAf,yBAEgBnB,OAAO,CAACW,OAAO,CAACN,SAAT,CAAP,CAA2Bc,MAA3B,CAAkC,KAAlC,CAFhB,GAdJ,cAoBI,aAAK,SAAS,CAAC,eAAf,sBAEanB,OAAO,CAACW,OAAO,CAACL,MAAT,CAAP,CAAwBa,MAAxB,CAA+B,KAA/B,CAFb,GApBJ,GAFJ,EAVI,EADK,EAAT,CADyB,EAAtB,CAkDX,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,QAC3BA,CAAAA,IAAI,YAAOrB,OAAO,CAACqB,IAAD,CAAP,CAAcF,MAAd,CAAqB,MAArB,CAAP,EAAwC,IADjB,EAAxB","sourcesContent":["import React from 'react';\nimport {Circle , Popup} from \"react-leaflet\";\nimport numeral from \"numeral\";\nimport '../css/mapLeafte.css'\n\n\nconst casesTypeColors = {\n    cases: {\n        hex: \"#efb61f\",\n        multiplier: 200,\n    },\n    recovered: {\n        hex: \"#7dd71d\",\n        multiplier: 300,\n    },\n    deaths: {\n        hex: \"#e52828\",\n        multiplier: 400,\n    },\n};\n\n\n\n\n    export const showDataOnMap = (data, casesType = \"cases\") =>\n        data.map((country) => (\n            <Circle\n                center={[country.countryInfo.lat, country.countryInfo.long]}\n                color={casesTypeColors[casesType].hex}\n                fillColor={casesTypeColors[casesType].hex}\n                fillOpacity={0.4}\n                radius={\n                    Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\n                }\n            >\n\n        <Popup>\n\n            <div className='infoPopContainer'>\n                <div className='infoFlag' style={{backgroundImage : `url(${country.countryInfo.flag})`}}>\n\n                </div>\n                <div className='infoCountryName'>\n\n                    {country.country}\n\n                </div>\n                <div className='infoCasesType'>\n\n                    Cases: {numeral(country.cases).format('0,0')}\n\n                </div>\n                <div className='infoCasesType'>\n\n                    Recovered: {numeral(country.recovered).format('0,0')}\n\n\n                </div>\n                <div className='infoCasesType'>\n\n                    Deaths: {numeral(country.deaths).format('0,0')}\n\n\n                </div>\n            </div>\n\n\n        </Popup>\n\n            </Circle>\n        ));\n\n\n\nexport const prettyPrintStat = (stat) =>\n    stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";"]},"metadata":{},"sourceType":"module"}