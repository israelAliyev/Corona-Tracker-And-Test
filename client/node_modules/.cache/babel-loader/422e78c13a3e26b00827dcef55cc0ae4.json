{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/israil/WebstormProjects/Metbix/client/src/operationsUtils.js\";\nimport React from 'react';\nimport { Circle, Popup } from \"react-leaflet\";\nimport numeral from \"numeral\";\nconst casesTypeColors = {\n  cases: {\n    hex: \"#CC1034\",\n    rgb: \"rgb(204, 16, 52)\",\n    half_op: \"rgba(204, 16, 52, 0.5)\",\n    multiplier: 800\n  },\n  recovered: {\n    hex: \"#7dd71d\",\n    rgb: \"rgb(125, 215, 29)\",\n    half_op: \"rgba(125, 215, 29, 0.5)\",\n    multiplier: 1200\n  },\n  deaths: {\n    hex: \"#fb4443\",\n    rgb: \"rgb(251, 68, 67)\",\n    half_op: \"rgba(251, 68, 67, 0.5)\",\n    multiplier: 2000\n  }\n};\nexport const showDataOnMap = (data, casesType = 'cases') => {\n  data.map(country => /*#__PURE__*/_jsxDEV(Circle, {\n    center: [country.countryInfo.lat, country.countryInfo.map],\n    fillOpacity: 0.4,\n    color: casesTypeColors[casesType].hex,\n    fillColor: casesTypeColors[casesType].hex,\n    radius: Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier,\n    children: /*#__PURE__*/_jsxDEV(Popup, {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"I'm A Map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this));\n};","map":{"version":3,"sources":["/Users/israil/WebstormProjects/Metbix/client/src/operationsUtils.js"],"names":["React","Circle","Popup","numeral","casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","showDataOnMap","data","casesType","map","country","countryInfo","lat","Math","sqrt"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAiBC,KAAjB,QAA6B,eAA7B;AACA,OAAOC,OAAP,MAAoB,SAApB;AAGA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,GAAG,EAAE,SADF;AAEHC,IAAAA,GAAG,EAAE,kBAFF;AAGHC,IAAAA,OAAO,EAAE,wBAHN;AAIHC,IAAAA,UAAU,EAAE;AAJT,GADa;AAOpBC,EAAAA,SAAS,EAAE;AACPJ,IAAAA,GAAG,EAAE,SADE;AAEPC,IAAAA,GAAG,EAAE,mBAFE;AAGPC,IAAAA,OAAO,EAAE,yBAHF;AAIPC,IAAAA,UAAU,EAAE;AAJL,GAPS;AAapBE,EAAAA,MAAM,EAAE;AACJL,IAAAA,GAAG,EAAE,SADD;AAEJC,IAAAA,GAAG,EAAE,kBAFD;AAGJC,IAAAA,OAAO,EAAE,wBAHL;AAIJC,IAAAA,UAAU,EAAE;AAJR;AAbY,CAAxB;AAsBA,OAAO,MAAMG,aAAa,GAAG,CAACC,IAAD,EAAQC,SAAS,GAAG,OAApB,KAAgC;AAGzDD,EAAAA,IAAI,CAACE,GAAL,CAAUC,OAAD,iBAET,QAAC,MAAD;AAEI,IAAA,MAAM,EAAI,CAACA,OAAO,CAACC,WAAR,CAAoBC,GAArB,EAA2BF,OAAO,CAACC,WAAR,CAAoBF,GAA/C,CAFd;AAGI,IAAA,WAAW,EAAI,GAHnB;AAII,IAAA,KAAK,EAAIX,eAAe,CAACU,SAAD,CAAf,CAA2BR,GAJxC;AAKI,IAAA,SAAS,EAAIF,eAAe,CAACU,SAAD,CAAf,CAA2BR,GAL5C;AAMI,IAAA,MAAM,EAAIa,IAAI,CAACC,IAAL,CAAUJ,OAAO,CAACF,SAAD,CAAjB,IAAgCV,eAAe,CAACU,SAAD,CAAf,CAA2BL,UANzE;AAAA,2BASI,QAAC,KAAD;AAAA,6BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,UAFA;AAwBH,CA3BM","sourcesContent":["import React from 'react';\nimport {Circle , Popup} from \"react-leaflet\";\nimport numeral from \"numeral\";\n\n\nconst casesTypeColors = {\n    cases: {\n        hex: \"#CC1034\",\n        rgb: \"rgb(204, 16, 52)\",\n        half_op: \"rgba(204, 16, 52, 0.5)\",\n        multiplier: 800,\n    },\n    recovered: {\n        hex: \"#7dd71d\",\n        rgb: \"rgb(125, 215, 29)\",\n        half_op: \"rgba(125, 215, 29, 0.5)\",\n        multiplier: 1200,\n    },\n    deaths: {\n        hex: \"#fb4443\",\n        rgb: \"rgb(251, 68, 67)\",\n        half_op: \"rgba(251, 68, 67, 0.5)\",\n        multiplier: 2000,\n    },\n};\n\n\nexport const showDataOnMap = (data , casesType = 'cases') => {\n\n\n    data.map((country) => (\n\n    <Circle\n\n        center = {[country.countryInfo.lat , country.countryInfo.map ]}\n        fillOpacity = {0.4}\n        color = {casesTypeColors[casesType].hex}\n        fillColor = {casesTypeColors[casesType].hex}\n        radius = {Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier}\n    >\n\n        <Popup>\n\n            <h1>I'm A Map</h1>\n\n\n        </Popup>\n\n    </Circle>\n\n\n    ))\n\n\n}"]},"metadata":{},"sourceType":"module"}