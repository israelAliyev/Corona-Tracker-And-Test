{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/israil/WebstormProjects/Metbix/client/src/LoginAndRegister/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState, useEffect } from 'react';\nimport '../css/register.css';\nimport Axios from 'axios';\n\nconst Register = () => {\n  _s();\n\n  Axios.defaults.withCredentials = true;\n  const [userNameReg, setUserNameReg] = useState(\"\");\n  const [userMailReg, setUserMailReg] = useState(\"\");\n  const [userPasswordReg, setUserPasswordReg] = useState(\"\");\n  const [confirmUserPasswordReg, setConfirmUserPasswordReg] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [showInput, setShowInput] = useState(false);\n  const [image, setImage] = useState(\"/images/rcb.jpg\");\n\n  const view = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'metbix_images');\n    const res = await fetch('https://api.cloudinary.com/v1_1/metbix-com/image/upload', {\n      method: 'POST',\n      body: data\n    });\n    const file = await res.json();\n    setImage(file.secure_url);\n  };\n\n  const registerFunc = () => {\n    if (userNameReg !== \"\" && userMailReg !== \"\" && userPasswordReg !== \"\" && confirmUserPasswordReg !== \"\") {\n      if (userMailReg.indexOf('@') !== -1 && userMailReg.indexOf('@') !== 0 && userMailReg.indexOf('@') !== userMailReg.length) {\n        Axios.post('http://localhost:4000/usemail', {\n          mail: userMailReg\n        }).then(response => {\n          if (response.data.exist !== true) {\n            if (userPasswordReg.length > 7) {\n              if (userPasswordReg === confirmUserPasswordReg) {\n                Axios.post('http://localhost:4000/register', {\n                  username: userNameReg,\n                  mail: userMailReg,\n                  password: userPasswordReg\n                });\n                window.location = '/login';\n              } else {\n                setMessage(\"Please verify the password correctly!\");\n              }\n            } else {\n              setMessage(\"Password must be at least 8 digits!\");\n            }\n          } else {\n            setMessage(\"This e-post address is already registered!\");\n          }\n        });\n      } else {\n        setMessage(\"Not a valid email address\");\n      }\n    } else {\n      setMessage(\"Any form can't be empty!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginM\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divI\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"inf\",\n          children: \"Please Register to pass the CoronaVirus Test.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"divH\",\n        children: [\"  \", /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"inf\",\n          children: \"I have Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 41\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://localhost:3000/login\",\n        className: \"signUp\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"loginT\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), showInput === true && /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input_file\",\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: view\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: e => setShowInput(!showInput),\n        id: message === \"\" ? \"profil_image\" : \"profil_image2\",\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), showInput === true && /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"upload_image\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), message !== \"\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger register_message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Error!:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), \" \", message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__group field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setUserMailReg(e.target.value),\n          autoComplete: \"off\",\n          type: \"input\",\n          className: \"form__field\",\n          placeholder: \"Email\",\n          name: \"email\",\n          id: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form__label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__group2 field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setUserPasswordReg(e.target.value),\n          autoComplete: \"off\",\n          type: \"password\",\n          className: \"form__field\",\n          placeholder: \"Password\",\n          name: \"password\",\n          id: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form__label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__group3 field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setConfirmUserPasswordReg(e.target.value),\n          autoComplete: \"off\",\n          type: \"password\",\n          className: \"form__field\",\n          placeholder: \"PasswordConfirm\",\n          name: \"passwordConfirm\",\n          id: \"passwordConfirm\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"passwordConfirm\",\n          className: \"form__label\",\n          children: \"Password Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form__group4 field\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setUserNameReg(e.target.value),\n          autoComplete: \"off\",\n          type: \"input\",\n          className: \"form__field\",\n          placeholder: \"UserName\",\n          name: \"username\",\n          id: \"username\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          className: \"form__label\",\n          children: \"UserName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: registerFunc,\n      className: \"signIn\",\n      children: \"SignUp\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"wQKSAgJfEwBqm80N+J38q2Tto94=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/israil/WebstormProjects/Metbix/client/src/LoginAndRegister/Register.js"],"names":["React","Component","useState","useEffect","Axios","Register","defaults","withCredentials","userNameReg","setUserNameReg","userMailReg","setUserMailReg","userPasswordReg","setUserPasswordReg","confirmUserPasswordReg","setConfirmUserPasswordReg","message","setMessage","showInput","setShowInput","image","setImage","view","e","files","target","data","FormData","append","res","fetch","method","body","file","json","secure_url","registerFunc","indexOf","length","post","mail","then","response","exist","username","password","window","location","value"],"mappings":"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","sourcesContent":["import React, { Component , useState , useEffect} from 'react';\nimport '../css/register.css'\nimport Axios from 'axios';\n\nconst Register = () => {\n\n   Axios.defaults.withCredentials = true;\n\n\n   const [userNameReg , setUserNameReg] = useState(\"\");\n   const [userMailReg , setUserMailReg] = useState(\"\");\n   const [userPasswordReg , setUserPasswordReg] = useState(\"\");\n   const [confirmUserPasswordReg , setConfirmUserPasswordReg] = useState(\"\");\n   const[message , setMessage] = useState(\"\");\n    const[showInput , setShowInput] = useState(false);\n    const[image , setImage] = useState(\"/images/rcb.jpg\");\n\n\n\n\n\n    const view = async (e) =>{\n        const files = e.target.files;\n          const data = new FormData();\n          data.append('file',files[0]);\n          data.append('upload_preset', 'metbix_images');\n\n          const res = await fetch('https://api.cloudinary.com/v1_1/metbix-com/image/upload',{\n              method:'POST',\n              body:data\n          })\n\n        const file = await res.json();\n          \n          setImage(file.secure_url);\n    }\n\n\n    const registerFunc = () => {\n\n        if (userNameReg !== \"\" && userMailReg !== \"\" && userPasswordReg !== \"\" && confirmUserPasswordReg !== \"\") {\n\n                    if(userMailReg.indexOf('@') !== -1 && userMailReg.indexOf('@') !== 0 && userMailReg.indexOf('@') !== userMailReg.length) {\n\n                        Axios.post('http://localhost:4000/usemail' , {mail:userMailReg})\n                            .then((response) => {\n\n                        if (response.data.exist !== true) {\n\n                 if (userPasswordReg.length > 7) {\n\n\n                     if(userPasswordReg === confirmUserPasswordReg) {\n\n                         Axios.post('http://localhost:4000/register', {\n                             username: userNameReg,\n                             mail: userMailReg,\n                             password: userPasswordReg\n                         })\n                         window.location = '/login'\n                     }else{\n\n                         setMessage(\"Please verify the password correctly!\")\n                     }\n\n                 }else{\n                     setMessage(\"Password must be at least 8 digits!\")\n                 }\n\n             }else{\n                 setMessage(\"This e-post address is already registered!\")\n             }\n\n                    });\n\n           }else{\n               setMessage(\"Not a valid email address\")\n           }\n\n\n        }else{\n            setMessage(\"Any form can't be empty!\")\n        }\n   }\n\n\n\n\n    return(\n        <div>\n\n            <div className=\"loginM\">\n\n                <div className=\"divI\">\n                    <h1 className=\"inf\">Please Register to pass the CoronaVirus Test.</h1>\n                </div>\n\n                <div className=\"divH\">  <h3 className=\"inf\">I have Account</h3> </div>\n\n\n                <a href=\"http://localhost:3000/login\" className=\"signUp\">Login</a>\n\n            </div>\n\n\n            <div className=\"login\">\n\n\n\n                <h1 className=\"loginT\">Register</h1>\n                {showInput === true &&\n                <input className=\"input_file\" type=\"file\"  accept=\"image/*\" onChange={view}/>\n                }\n                <img onClick={(e) => setShowInput(!showInput)} id={message === \"\" ? \"profil_image\" : \"profil_image2\"} src={image}/>\n\n                {showInput === true &&\n                <a className='upload_image'>Upload</a>\n                }\n\n                {message !== \"\" &&\n                <div  className=\"alert alert-danger register_message\">\n                    <strong>Error!:</strong> {message}\n                </div>\n                }\n\n\n\n                <div className=\"form__group field\">\n                    <input  onChange = {(e) => setUserMailReg(e.target.value)}  autoComplete=\"off\" type=\"input\" className=\"form__field\" placeholder=\"Email\" name=\"email\" id='email' required />\n                    <label htmlFor=\"email\" className=\"form__label\">Email</label>\n                </div>\n\n\n                <div className=\"form__group2 field\">\n                    <input  onChange = {(e) => setUserPasswordReg(e.target.value)} autoComplete=\"off\" type=\"password\" className=\"form__field\" placeholder=\"Password\"\n                           name=\"password\" id='password' required/>\n                    <label htmlFor=\"password\" className=\"form__label\">Password</label>\n                </div>\n\n                <div className=\"form__group3 field\">\n                    <input onChange = {(e) => setConfirmUserPasswordReg(e.target.value)} autoComplete=\"off\" type=\"password\" className=\"form__field\" placeholder=\"PasswordConfirm\"\n                           name=\"passwordConfirm\" id='passwordConfirm' required/>\n                    <label htmlFor=\"passwordConfirm\" className=\"form__label\">Password Confirm</label>\n                </div>\n\n\n                <div className=\"form__group4 field\">\n                    <input onChange = {(e) => setUserNameReg(e.target.value)} autoComplete=\"off\" type=\"input\" className=\"form__field\" placeholder=\"UserName\" name=\"username\"\n                           id='username' required/>\n                    <label htmlFor=\"username\" className=\"form__label\">UserName</label>\n                </div>\n\n            </div>\n\n            <a onClick={registerFunc} className=\"signIn\">SignUp</a>\n\n        </div>\n    );\n\n}\n\nexport default Register;\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}