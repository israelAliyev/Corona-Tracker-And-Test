{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _regeneratorRuntime from\"/Users/israil/WebstormProjects/Metbix/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/israil/WebstormProjects/Metbix/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/israil/WebstormProjects/Metbix/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Component,useState,useEffect}from'react';import'../css/header.css';import{FormControl,MenuItem,Select}from\"@material-ui/core\";import InfoStats from\"./infoStats\";import'../css/infoStats.css';import LineGraph from'./LineGraph';import'../css/lineGraph.css';import Map from\"./Map\";import\"leaflet/dist/leaflet.css\";import{prettyPrintStat}from\"./operationsUtils\";function ForMapPage(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),countries=_useState2[0],setCountries=_useState2[1];var _useState3=useState(\"WorldWide\"),_useState4=_slicedToArray(_useState3,2),country=_useState4[0],setCountry=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),countryInfo=_useState6[0],setCountryInfo=_useState6[1];var _useState7=useState({lat:41.423961,lng:46.703183}),_useState8=_slicedToArray(_useState7,2),mapCenter=_useState8[0],setMapCenter=_useState8[1];var _useState9=useState(2),_useState10=_slicedToArray(_useState9,2),mapZoom=_useState10[0],setMapZoom=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),mapCountry=_useState12[0],setMapCountry=_useState12[1];var _useState13=useState(\"cases\"),_useState14=_slicedToArray(_useState13,2),casesType=_useState14[0],setCasesType=_useState14[1];useEffect(function(){fetch('https://disease.sh/v3/covid-19/all').then(function(response){return response.json();}).then(function(data){setCountryInfo(data);});},[]);useEffect(function(){var getCountries=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch('https://disease.sh/v3/covid-19/countries').then(function(response){return response.json();}).then(function(data){var countries=data.map(function(country){return{name:country.country,value:country.countryInfo.iso2};});setCountries(countries);setMapCountry(data);});case 2:case\"end\":return _context.stop();}}},_callee);}));return function getCountries(){return _ref.apply(this,arguments);};}();getCountries();},[]);var onCountryChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var countryCode,url;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:countryCode=event.target.value;url=countryCode==='WorldWide'?\"https://disease.sh/v3/covid-19/all\":\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode);_context2.next=4;return fetch(url).then(function(response){return response.json();}).then(function(data){setCountry(countryCode);setCountryInfo(data);if(url===\"https://disease.sh/v3/covid-19/countries/\".concat(countryCode)){setMapCenter([data.countryInfo.lat,data.countryInfo.long]);}else{setMapCenter([41.42067843862231,46.93269214775548]);}setMapZoom(4);});case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function onCountryChange(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"map_header\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"header_text\",children:\"CoronaVirus Map\"}),/*#__PURE__*/_jsx(FormControl,{className:\"map_dropdown\",children:/*#__PURE__*/_jsxs(Select,{value:country,onChange:onCountryChange,variant:\"outlined\",children:[/*#__PURE__*/_jsx(MenuItem,{value:\"WorldWide\",children:\"WorldWide\"}),countries.map(function(country){return/*#__PURE__*/_jsx(MenuItem,{value:country.value,children:country.name});})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"map_stats\",children:[/*#__PURE__*/_jsx(InfoStats,{active:casesType===\"cases\",onClick:function onClick(e){return setCasesType(\"cases\");},title:\"Cases\",total:prettyPrintStat(countryInfo.cases),count:prettyPrintStat(countryInfo.todayCases)}),/*#__PURE__*/_jsx(InfoStats,{active:casesType===\"recovered\",onClick:function onClick(e){return setCasesType(\"recovered\");},title:\"Recovered\",total:prettyPrintStat(countryInfo.recovered),count:prettyPrintStat(countryInfo.todayRecovered)}),/*#__PURE__*/_jsx(InfoStats,{active:casesType===\"deaths\",onClick:function onClick(e){return setCasesType(\"deaths\");},title:\"Deaths\",total:prettyPrintStat(countryInfo.deaths),count:prettyPrintStat(countryInfo.todayDeaths)}),/*#__PURE__*/_jsx(LineGraph,{casesType:casesType})]}),/*#__PURE__*/_jsx(\"div\",{className:\"map\",children:/*#__PURE__*/_jsx(Map,{casesType:casesType,countries:mapCountry,center:mapCenter,zoom:mapZoom})})]});}export default ForMapPage;","map":{"version":3,"sources":["/Users/israil/WebstormProjects/Metbix/client/src/Map/forMapPage.js"],"names":["React","Component","useState","useEffect","FormControl","MenuItem","Select","InfoStats","LineGraph","Map","prettyPrintStat","ForMapPage","countries","setCountries","country","setCountry","countryInfo","setCountryInfo","lat","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountry","setMapCountry","casesType","setCasesType","fetch","then","response","json","data","getCountries","map","name","value","iso2","onCountryChange","event","countryCode","target","url","long","e","cases","todayCases","recovered","todayRecovered","deaths","todayDeaths"],"mappings":"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","sourcesContent":["import React, {Component , useState,useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/header.css';\nimport {FormControl,MenuItem,Select} from \"@material-ui/core\"\nimport InfoStats from \"./infoStats\";\nimport '../css/infoStats.css'\nimport LineGraph from './LineGraph';\nimport '../css/lineGraph.css';\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\nimport {prettyPrintStat} from \"./operationsUtils\";\n\n\n\nfunction ForMapPage(){\n\n    const[countries,setCountries] = useState([]);\n    const[country,setCountry] = useState(\"WorldWide\");\n    const[countryInfo,setCountryInfo] = useState({});\n    const[mapCenter, setMapCenter] = useState({lat: 41.423961 , lng: 46.703183} );\n    const [mapZoom, setMapZoom] = useState(2);\n    const[mapCountry , setMapCountry] = useState([]);\n    const[casesType , setCasesType] = useState(\"cases\");\n\n\n\n\n\n\n\n    useEffect(() => {\n\n        fetch('https://disease.sh/v3/covid-19/all')\n            .then((response) => response.json())\n            .then((data) => {\n\n                setCountryInfo(data);\n\n            });\n\n    },[]);\n\n\n    useEffect(() => {\n\n\n        const getCountries = async () => {\n\n            await fetch('https://disease.sh/v3/covid-19/countries')\n                .then((response) => response.json())\n                .then((data) => {\n\n                    const countries = data.map((country) => ({\n\n                        name : country.country,\n                        value : country.countryInfo.iso2,\n\n                    }));\n\n                    setCountries(countries);\n                    setMapCountry(data);\n                })\n\n\n        }\n\n\n        getCountries();\n\n    },[])\n\n\n\n\n\n\n\n    const onCountryChange = async (event) =>{\n\n        const countryCode = event.target.value;\n\n        const url =\n            countryCode === 'WorldWide'\n                ? \"https://disease.sh/v3/covid-19/all\"\n                : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n        await fetch(url)\n            .then((response) => response.json())\n            .then((data) => {\n\n                setCountry(countryCode);\n                setCountryInfo(data);\n\n               if( url === `https://disease.sh/v3/covid-19/countries/${countryCode}`) {\n                   setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n\n               } else{\n\n                   setMapCenter([41.42067843862231, 46.93269214775548]);\n\n\n               }\n\n                setMapZoom(4);\n            });\n\n\n\n    };\n\n\n\n    return (\n            <div>\n\n                <div className=\"map_header\">\n\n\n\n                    <h1 className='header_text'>CoronaVirus Map</h1>\n\n                    <FormControl className='map_dropdown'>\n\n                        <Select value={country} onChange={onCountryChange} variant='outlined'>\n\n                            <MenuItem  value=\"WorldWide\">WorldWide</MenuItem>\n\n\n                            {\n                                countries.map((country) => (\n\n                                 <MenuItem value={country.value}>{country.name}</MenuItem>\n\n                                ))\n\n                            }\n\n\n\n\n                        </Select>\n\n\n                    </FormControl>\n\n\n\n\n\n                </div>\n\n\n\n                <div className=\"map_stats\">\n\n\n\n\n                    <InfoStats\n\n                        active = {casesType === \"cases\"}\n                        onClick = {(e) => setCasesType(\"cases\")}\n\n                        title = \"Cases\"\n                        total = {prettyPrintStat(countryInfo.cases)}\n                        count = {prettyPrintStat(countryInfo.todayCases)}/>\n\n                    <InfoStats\n\n                        active = {casesType === \"recovered\"}\n                        onClick = {(e) => setCasesType(\"recovered\")}\n\n                        title = \"Recovered\"\n                        total = {prettyPrintStat(countryInfo.recovered)}\n                        count = {prettyPrintStat(countryInfo.todayRecovered)}/>\n                    <InfoStats\n\n                        active = {casesType === \"deaths\"}\n                        onClick = {(e) => setCasesType(\"deaths\")}\n\n                        title = \"Deaths\"\n                        total = {prettyPrintStat(countryInfo.deaths)}\n                        count = {prettyPrintStat(countryInfo.todayDeaths)}/>\n\n                    <LineGraph casesType={casesType}/>\n\n\n                </div>\n\n\n\n\n\n\n                <div className=\"map\">\n\n\n                    <Map casesType = {casesType} countries = {mapCountry} center={mapCenter} zoom={mapZoom}/>\n\n                </div>\n\n            </div>\n\n\n\n        );\n\n\n\n\n\n\n}\n\n\n\nexport default ForMapPage;\n\n\n\n"]},"metadata":{},"sourceType":"module"}